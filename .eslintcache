[{"F:\\ProgettiLearn\\Typescript\\tareas\\src\\index.tsx":"1","F:\\ProgettiLearn\\Typescript\\tareas\\src\\App.tsx":"2","F:\\ProgettiLearn\\Typescript\\tareas\\src\\reportWebVitals.ts":"3","F:\\ProgettiLearn\\Typescript\\tareas\\src\\components\\Container\\index.tsx":"4","F:\\ProgettiLearn\\Typescript\\tareas\\src\\pages\\Todo\\index.tsx":"5","F:\\ProgettiLearn\\Typescript\\tareas\\src\\pages\\BackendTodo\\index.tsx":"6","F:\\ProgettiLearn\\Typescript\\tareas\\src\\components\\Task\\index.tsx":"7","F:\\ProgettiLearn\\Typescript\\tareas\\src\\pages\\oneTodo\\index.tsx":"8","F:\\ProgettiLearn\\Typescript\\tareas\\src\\pages\\Register.tsx":"9","F:\\ProgettiLearn\\Typescript\\tareas\\src\\pages\\Login\\Login.tsx":"10","F:\\ProgettiLearn\\Typescript\\tareas\\src\\Utils\\Context\\GlobalContext.tsx":"11","F:\\ProgettiLearn\\Typescript\\tareas\\src\\components\\Route\\index.tsx":"12","F:\\ProgettiLearn\\Typescript\\tareas\\src\\Utils\\index.tsx":"13","F:\\ProgettiLearn\\Typescript\\tareas\\src\\pages\\Share\\index.tsx":"14","F:\\ProgettiLearn\\Typescript\\tareas\\src\\components\\modale\\index.tsx":"15"},{"size":553,"mtime":1614072129708,"results":"16","hashOfConfig":"17"},{"size":2014,"mtime":1613856017731,"results":"18","hashOfConfig":"17"},{"size":425,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":1990,"mtime":1614096613301,"results":"20","hashOfConfig":"17"},{"size":3270,"mtime":1614103014744,"results":"21","hashOfConfig":"17"},{"size":6626,"mtime":1614103314408,"results":"22","hashOfConfig":"17"},{"size":1176,"mtime":1614102484002,"results":"23","hashOfConfig":"17"},{"size":1116,"mtime":1613855940755,"results":"24","hashOfConfig":"17"},{"size":2822,"mtime":1613855955333,"results":"25","hashOfConfig":"17"},{"size":3502,"mtime":1614094643239,"results":"26","hashOfConfig":"17"},{"size":709,"mtime":1613855990913,"results":"27","hashOfConfig":"17"},{"size":1290,"mtime":1613855918503,"results":"28","hashOfConfig":"17"},{"size":519,"mtime":1613856013365,"results":"29","hashOfConfig":"17"},{"size":1070,"mtime":1613855951879,"results":"30","hashOfConfig":"17"},{"size":688,"mtime":1614070988341,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"z74h06",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"F:\\ProgettiLearn\\Typescript\\tareas\\src\\index.tsx",[],["67","68"],"F:\\ProgettiLearn\\Typescript\\tareas\\src\\App.tsx",["69","70"],"import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Route from \"./components/Route\";\r\nimport Container from \"./components/Container\";\r\nimport Todo from \"./pages/Todo\";\r\nimport BackendTodo from \"./pages/BackendTodo\";\r\nimport oneTodo from \"./pages/oneTodo\";\r\nimport Share from \"./pages/Share\";\r\nimport Register from \"./pages/Register\";\r\nimport Login from \"./pages/Login/Login\";\r\nimport {\r\n  GlobalContext,\r\n  GlobalContextOptional,\r\n  initialContextState,\r\n} from \"./Utils/Context/GlobalContext\";\r\nimport axios from \"axios\";\r\nimport { request } from \"./Utils\";\r\nfunction App() {\r\n  const [context, setContext] = useState(initialContextState);\r\n\r\n  const updateGlobalContext = (state: GlobalContextOptional) => {\r\n    setContext({ ...context, ...state });\r\n  };\r\n\r\n  useEffect(() => {\r\n    request(\"get\", \"/authentication/status\")\r\n      .then((data) => {\r\n        updateGlobalContext({ authenticated: true, ...data });\r\n      })\r\n      .catch((err) => {\r\n        localStorage.removeItem(\"token\");\r\n        updateGlobalContext({ authenticated: false });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <GlobalContext.Provider value={{ ...context, updateGlobalContext }}>\r\n      <Router>\r\n        <Container>\r\n          <Route\r\n            type=\"notAuthenticated\"\r\n            path=\"/register\"\r\n            component={Register}\r\n          />\r\n          <Route type=\"notAuthenticated\" path=\"/login\" component={Login} />\r\n          <Route type=\"authenticated\" exact path=\"/\" component={Todo} />\r\n          <Route\r\n            type=\"authenticated\"\r\n            exact\r\n            path=\"/api\"\r\n            component={BackendTodo}\r\n          />\r\n          <Route type=\"authenticated\" path=\"/api/:id\" component={oneTodo} />\r\n          <Route\r\n            type=\"authenticated\"\r\n            path=\"/share/:id/:title\"\r\n            component={Share}\r\n          />\r\n        </Container>\r\n      </Router>\r\n    </GlobalContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","F:\\ProgettiLearn\\Typescript\\tareas\\src\\reportWebVitals.ts",[],"F:\\ProgettiLearn\\Typescript\\tareas\\src\\components\\Container\\index.tsx",["71","72","73","74","75","76"],"F:\\ProgettiLearn\\Typescript\\tareas\\src\\pages\\Todo\\index.tsx",[],"F:\\ProgettiLearn\\Typescript\\tareas\\src\\pages\\BackendTodo\\index.tsx",["77","78","79"],"F:\\ProgettiLearn\\Typescript\\tareas\\src\\components\\Task\\index.tsx",["80","81","82"],"F:\\ProgettiLearn\\Typescript\\tareas\\src\\pages\\oneTodo\\index.tsx",["83","84"],"import axios from \"axios\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { TodoI } from \"../../type\";\r\nimport { request } from \"../../Utils\";\r\n\r\nexport default function OneTodo(props: any) {\r\n  const _id = props.match.params.id;\r\n\r\n  const [todo, setTodo] = useState<TodoI>();\r\n\r\n  console.log(_id);\r\n  const onEdit = () => {\r\n    request(\"post\", \"/todo/edit/\", todo)\r\n      .then((data) => {})\r\n      .catch((err) => {});\r\n  };\r\n\r\n  useEffect(() => {\r\n    request(\"get\", \"/todo/info/\" + _id)\r\n      .then((todo) => {\r\n        setTodo(todo);\r\n      })\r\n      .catch((err) => {});\r\n  }, [_id]);\r\n\r\n  return (\r\n    <>\r\n      {!todo && <p>Loading...</p>}\r\n      {todo && (\r\n        <>\r\n          <input\r\n            value={todo.title}\r\n            onChange={(e) => setTodo({ ...todo, title: e.target.value })}\r\n          ></input>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={todo.done}\r\n            onClick={() => setTodo({ ...todo, done: !todo.done })}\r\n          ></input>\r\n          <button onClick={onEdit}>Modifica</button>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","F:\\ProgettiLearn\\Typescript\\tareas\\src\\pages\\Register.tsx",["85","86"],"import axios from \"axios\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { FormRegister } from \"../type\";\r\nimport { request } from \"../Utils\";\r\nimport { GlobalContext } from \"../Utils/Context/GlobalContext\";\r\n// nome cognome email psw pswConfirm tos\r\nexport default function Register() {\r\n  const [userInfo, setUserInfo] = useState<FormRegister>({\r\n    name: \"\",\r\n    surname: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordConfirm: \"\",\r\n    tos: false,\r\n  });\r\n  const { updateGlobalContext } = useContext(GlobalContext);\r\n  const onFormSubmit = (e: any) => {\r\n    e.preventDefault();\r\n\r\n    request(\"post\", \"/authentication/signup\")\r\n      .then((data) => {\r\n        const token = data.token;\r\n        localStorage.setItem(\"token\", token);\r\n        console.log(data);\r\n        updateGlobalContext({ ...data, authenticated: true });\r\n      })\r\n\r\n      .catch((err) => {});\r\n  };\r\n  const onValueChange = (e: any, field: string) => {\r\n    const text = e.target.value;\r\n    setUserInfo({ ...userInfo, [field]: text });\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <form onSubmit={onFormSubmit}>\r\n          <input\r\n            required\r\n            className=\"border\"\r\n            type=\"text\"\r\n            placeholder=\"inserisci nome\"\r\n            value={userInfo.name}\r\n            onChange={(e) => onValueChange(e, \"name\")}\r\n          ></input>\r\n          <br />\r\n          <input\r\n            required\r\n            className=\"border\"\r\n            type=\"text\"\r\n            placeholder=\"inserisci cognome\"\r\n            value={userInfo.surname}\r\n            onChange={(e) => onValueChange(e, \"surname\")}\r\n          ></input>\r\n          <br />\r\n          <input\r\n            required\r\n            className=\"border\"\r\n            type=\"text\"\r\n            placeholder=\"email insert\"\r\n            value={userInfo.email}\r\n            onChange={(e) => onValueChange(e, \"email\")}\r\n          ></input>{\" \"}\r\n          <br />\r\n          <input\r\n            required\r\n            className=\"border\"\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            value={userInfo.password}\r\n            onChange={(e) => onValueChange(e, \"password\")}\r\n          ></input>{\" \"}\r\n          <br />\r\n          <input\r\n            className=\"border\"\r\n            type=\"password\"\r\n            placeholder=\"password confirm\"\r\n            value={userInfo.passwordConfirm}\r\n            onChange={(e) => onValueChange(e, \"passwordConfirm\")}\r\n          ></input>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={userInfo.tos}\r\n            onClick={() => setUserInfo({ ...userInfo, tos: !userInfo.tos })}\r\n          ></input>\r\n          <button className=\"bg-blue-400\" type=\"submit\">\r\n            Registrati\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","F:\\ProgettiLearn\\Typescript\\tareas\\src\\pages\\Login\\Login.tsx",["87","88","89"],"F:\\ProgettiLearn\\Typescript\\tareas\\src\\Utils\\Context\\GlobalContext.tsx",[],"F:\\ProgettiLearn\\Typescript\\tareas\\src\\components\\Route\\index.tsx",[],"F:\\ProgettiLearn\\Typescript\\tareas\\src\\Utils\\index.tsx",[],"F:\\ProgettiLearn\\Typescript\\tareas\\src\\pages\\Share\\index.tsx",["90","91","92","93","94","95","96","97"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport Task from \"../../components/Task\";\r\nimport { ITask, TodoI } from \"../../type\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { request } from \"../../Utils\";\r\n\r\nexport default function Share(props: any) {\r\n  const _id = props.match.params.id;\r\n  const title = props.match.params.title;\r\n\r\n  const [todo, setTodo] = useState<TodoI>();\r\n\r\n  console.log(_id);\r\n  console.log(title);\r\n\r\n  const onShare = () => {\r\n    var personShare = prompt(\"Insert email to friend:\", \" \");\r\n    //nella riga 22 ho creato nel back-end il path '/share' ma non mi sono riuscito nella query\r\n    request(\"post\", \"/todo/share/\", todo)\r\n      .then((data) => {})\r\n      .catch((err) => {});\r\n  };\r\n  return (\r\n    <>\r\n      {!todo && <p>Loading...</p>}\r\n      {todo && (\r\n        <>\r\n          <form>\r\n            Task: <input type=\"text\" value={todo.title} readOnly></input>\r\n            <button onClick={onShare}>Condividi</button>\r\n          </form>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","F:\\ProgettiLearn\\Typescript\\tareas\\src\\components\\modale\\index.tsx",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":16,"column":8,"nodeType":"104","messageId":"105","endLine":16,"endColumn":13},{"ruleId":"106","severity":1,"message":"107","line":34,"column":6,"nodeType":"108","endLine":34,"endColumn":8,"suggestions":"109"},{"ruleId":"102","severity":1,"message":"110","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"111","line":1,"column":27,"nodeType":"104","messageId":"105","endLine":1,"endColumn":36},{"ruleId":"102","severity":1,"message":"112","line":18,"column":5,"nodeType":"104","messageId":"105","endLine":18,"endColumn":10},{"ruleId":"102","severity":1,"message":"113","line":19,"column":5,"nodeType":"104","messageId":"105","endLine":19,"endColumn":9},{"ruleId":"102","severity":1,"message":"114","line":20,"column":5,"nodeType":"104","messageId":"105","endLine":20,"endColumn":12},{"ruleId":"102","severity":1,"message":"115","line":21,"column":5,"nodeType":"104","messageId":"105","endLine":21,"endColumn":7},{"ruleId":"102","severity":1,"message":"116","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":12},{"ruleId":"102","severity":1,"message":"117","line":3,"column":10,"nodeType":"104","messageId":"105","endLine":3,"endColumn":15},{"ruleId":"102","severity":1,"message":"103","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":13},{"ruleId":"102","severity":1,"message":"110","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"111","line":1,"column":27,"nodeType":"104","messageId":"105","endLine":1,"endColumn":36},{"ruleId":"102","severity":1,"message":"118","line":1,"column":38,"nodeType":"104","messageId":"105","endLine":1,"endColumn":48},{"ruleId":"102","severity":1,"message":"103","line":1,"column":8,"nodeType":"104","messageId":"105","endLine":1,"endColumn":13},{"ruleId":"102","severity":1,"message":"119","line":2,"column":28,"nodeType":"104","messageId":"105","endLine":2,"endColumn":34},{"ruleId":"102","severity":1,"message":"103","line":1,"column":8,"nodeType":"104","messageId":"105","endLine":1,"endColumn":13},{"ruleId":"102","severity":1,"message":"111","line":2,"column":27,"nodeType":"104","messageId":"105","endLine":2,"endColumn":36},{"ruleId":"102","severity":1,"message":"103","line":1,"column":8,"nodeType":"104","messageId":"105","endLine":1,"endColumn":13},{"ruleId":"102","severity":1,"message":"111","line":2,"column":17,"nodeType":"104","messageId":"105","endLine":2,"endColumn":26},{"ruleId":"102","severity":1,"message":"119","line":2,"column":28,"nodeType":"104","messageId":"105","endLine":2,"endColumn":34},{"ruleId":"102","severity":1,"message":"119","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":23},{"ruleId":"102","severity":1,"message":"111","line":1,"column":35,"nodeType":"104","messageId":"105","endLine":1,"endColumn":44},{"ruleId":"102","severity":1,"message":"116","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":12},{"ruleId":"102","severity":1,"message":"117","line":3,"column":10,"nodeType":"104","messageId":"105","endLine":3,"endColumn":15},{"ruleId":"102","severity":1,"message":"103","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":13},{"ruleId":"102","severity":1,"message":"120","line":5,"column":10,"nodeType":"104","messageId":"105","endLine":5,"endColumn":14},{"ruleId":"102","severity":1,"message":"121","line":12,"column":16,"nodeType":"104","messageId":"105","endLine":12,"endColumn":23},{"ruleId":"102","severity":1,"message":"122","line":18,"column":9,"nodeType":"104","messageId":"105","endLine":18,"endColumn":20},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateGlobalContext'. Either include it or remove the dependency array.","ArrayExpression",["125"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'email' is assigned a value but never used.","'name' is assigned a value but never used.","'surname' is assigned a value but never used.","'id' is assigned a value but never used.","'Task' is defined but never used.","'ITask' is defined but never used.","'useContext' is defined but never used.","'useRef' is defined but never used.","'Link' is defined but never used.","'setTodo' is assigned a value but never used.","'personShare' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},"Update the dependencies array to be: [updateGlobalContext]",{"range":"128","text":"129"},[1137,1139],"[updateGlobalContext]"]